{"version":3,"sources":["Storage/Storage.js","todoList.js","index.js"],"names":["storage","setStorage","key","value","localStorage","setItem","JSON","stringify","getStorage","parse","getItem","removeStorage","todoList","props","keyEnter","e","which","ele","target","listinfo","title","swfc","newlist","state","list","push","setState","changeBox","index","data","deleteData","splice","sfwc","this","className","type","onKeyPress","map","v","k","checked","onChange","bind","onClick","React","Component","ReactDom","render","document","getElementById"],"mappings":"kMAWeA,G,MAXH,CACRC,WADQ,SACGC,EAAIC,GACXC,aAAaC,QAAQH,EAAII,KAAKC,UAAUJ,KAE5CK,WAJQ,SAIGN,GACP,OAAOI,KAAKG,MAAML,aAAaM,QAAQR,KAE3CS,cAPQ,SAOMT,GACVE,aAAaO,cAAcT,MCJdU,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAeVC,SAAS,SAACC,GACN,GAAa,KAAVA,EAAEC,MAAW,CACZ,IAAIC,EAAIF,EAAEG,OACNC,EAAS,CACTC,MAAMH,EAAId,MACVkB,MAAK,GAELC,EAAQ,EAAKC,MAAMC,KACvBF,EAAQG,KAAKN,GACb,EAAKO,SAAS,CACVF,KAAKF,IAETL,EAAId,MAAM,GACVH,EAAQC,WAAW,QAAQqB,KA7BhB,EAiCnBK,UAAU,SAACC,GACP,IAAIC,EAAK,EAAKN,MAAMC,KACpBK,EAAKD,GAAOP,MAAMQ,EAAKD,GAAOP,KAC9B,EAAKK,SAAS,CACVF,KAAKK,IAET7B,EAAQC,WAAW,QAAQ4B,IAvCZ,EA0CnBC,WAAW,SAACF,GACR,IAAIC,EAAK,EAAKN,MAAMC,KACpBK,EAAKE,OAAOH,EAAM,GAClB,EAAKF,SAAS,CACVF,KAAKK,IAET7B,EAAQC,WAAW,QAAQ4B,IA9C3B,EAAKN,MAAQ,CACTC,KAAK,CACD,CACIJ,MAAM,MACNY,MAAK,GAET,CACIZ,MAAM,QACNY,MAAK,KAVF,E,iFAoDf,IAAIH,EAAK7B,EAAQQ,WAAW,SAEzBqB,GACCI,KAAKP,SAAS,CACVF,KAAKK,M,+BAIP,IAAD,OACL,OACI,yBAAKK,UAAU,SACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aAAY,yCAC3B,yBAAKA,UAAU,cACX,2BAAOC,KAAK,OAAOC,WAAYH,KAAKnB,aAG5C,6BACA,6BACI,4BACI,kDAEImB,KAAKV,MAAMC,KAAKa,KAAI,SAACC,EAAEC,GACnB,OAAID,EAAEjB,KAOC,GALC,yBAAKnB,IAAKqC,GACN,4BAAI,2BAAOJ,KAAK,WAAWK,QAASF,EAAEjB,KAAMoB,SAAU,EAAKd,UAAUe,KAAK,EAAKH,KAAMD,EAAElB,MAAvF,WAAqG,4BAAQuB,QAAS,EAAKb,WAAWY,KAAK,EAAKH,IAA3C,qBAOzH,kDAEIN,KAAKV,MAAMC,KAAKa,KAAI,SAACC,EAAEC,GACnB,OAAGD,EAAEjB,KAEG,yBAAKnB,IAAKqC,GACN,4BAAI,2BAAOJ,KAAK,WAAWK,QAASF,EAAEjB,KAAMoB,SAAU,EAAKd,UAAUe,KAAK,EAAKH,KAAMD,EAAElB,MAAvF,WAAqG,4BAAQuB,QAAS,EAAKb,WAAWY,KAAK,EAAKH,IAA3C,kBAI1G,a,GAhGDK,IAAMC,WCA5CC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.98172f41.chunk.js","sourcesContent":["let storage={\r\n    setStorage(key,value){\r\n        localStorage.setItem(key,JSON.stringify(value));\r\n    },\r\n    getStorage(key){\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n    removeStorage(key){\r\n        localStorage.removeStorage(key);\r\n    }\r\n}\r\nexport default storage;\r\n","import React from 'react';\r\nimport './ToDoList.css'\r\nimport storage from './Storage/Storage'\r\n\r\nexport default class todoList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            list:[\r\n                {\r\n                    title:\"PHP\",\r\n                    sfwc:false\r\n                },\r\n                {\r\n                    title:\"React\",\r\n                    sfwc:true\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    //回车事件\r\n    keyEnter=(e)=>{\r\n        if(e.which===13){\r\n            let ele=e.target;\r\n            let listinfo={\r\n                title:ele.value,\r\n                swfc:false\r\n            }\r\n            let newlist=this.state.list;\r\n            newlist.push(listinfo);\r\n            this.setState({\r\n                list:newlist\r\n            });\r\n            ele.value=\"\"\r\n            storage.setStorage(\"lists\",newlist);\r\n        }\r\n    }\r\n    //监听事件 \r\n    changeBox=(index)=>{\r\n        let data=this.state.list;\r\n        data[index].swfc=!data[index].swfc;\r\n        this.setState({\r\n            list:data\r\n        });\r\n        storage.setStorage(\"lists\",data);\r\n    }\r\n    //删除事件\r\n    deleteData=(index)=>{\r\n        let data=this.state.list;\r\n        data.splice(index,1);\r\n        this.setState({\r\n            list:data\r\n        });\r\n        storage.setStorage(\"lists\",data);\r\n    }\r\n    componentDidMount(){\r\n        //读取缓存\r\n        let data=storage.getStorage(\"lists\");\r\n        //第一次刷新的时候，data不存在，给list赋值以后,map无法遍历，因此在这里需判断data是否存在\r\n        if(data){\r\n            this.setState({\r\n                list:data\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"block\">\r\n                <div className=\"title\">\r\n                    <div className=\"titleleft\"><h2>ToDoList</h2></div>\r\n                    <div className=\"titleright\">\r\n                        <input type=\"text\" onKeyPress={this.keyEnter}/>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <ul>\r\n                        <h3>未完成</h3>\r\n                        {\r\n                            this.state.list.map((v,k)=>{\r\n                                if(!v.swfc){\r\n                                    return (\r\n                                        <div key={k}>\r\n                                            <li><input type=\"checkbox\" checked={v.swfc} onChange={this.changeBox.bind(this,k)}/>{v.title}--------<button onClick={this.deleteData.bind(this,k)}>删除</button></li>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                return \"\"\r\n                            })\r\n                        }\r\n                        <h3>已完成</h3>\r\n                        {\r\n                            this.state.list.map((v,k)=>{\r\n                                if(v.swfc){\r\n                                    return (\r\n                                        <div key={k}>\r\n                                            <li><input type=\"checkbox\" checked={v.swfc} onChange={this.changeBox.bind(this,k)}/>{v.title}--------<button onClick={this.deleteData.bind(this,k)}>删除</button></li>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                return \"\"\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport Todolist from './todoList'\r\n\r\nReactDom.render(\r\n    <Todolist />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}